{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selector.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getFilterContacts","data","normalizedFilter","toLowerCase","name","includes","actions","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeContact","axios","defaults","baseURL","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","contactInputId","shortid","generate","handleChange","e","target","value","formSubmitHandler","item","normalizedName","find","el","alert","a","post","then","catch","error","addContactEl","console","log","reset","onSubmit","preventDefault","id","className","s","form","htmlFor","labelForm","formInput","type","onChange","pattern","title","required","btnAdd","ContactList","useEffect","get","contactList","map","contactItem","nameForm","numberForm","btnDelete","onClick","delete","deleteContactsEl","svgBtnDelete","src","alt","defaultProps","Container","children","container","Filter","filterLabel","App","createReducer","_","payload","contact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","rootReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68cc5af8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2CiMQ\",\"title\":\"Container_title__1D-op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__36zkV\",\"formInput\":\"Filter_formInput__M_QrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3uWmk\",\"labelForm\":\"ContactForm_labelForm__CiCgU\",\"formInput\":\"ContactForm_formInput__1s3kP\",\"btnAdd\":\"ContactForm_btnAdd__1BPka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgBtnDelete\":\"ContactList_svgBtnDelete__3Kn6n\",\"btnDelete\":\"ContactList_btnDelete__3qv5H\",\"contactItem\":\"ContactList_contactItem__3PCEd\",\"nameForm\":\"ContactList_nameForm__3ThAt\",\"numberForm\":\"ContactList_numberForm__3yqm-\"};","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilterContacts = state => {\r\n    const data = getContacts(state);\r\n    const filter = getFilter(state);\r\n    if (filter) {\r\n        let normalizedFilter = filter.toLowerCase();\r\n        return data.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n    } else {\r\n        return data;\r\n    }\r\n};\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getContactsRequest = createAction('contacts/getContactsRequest');\r\nconst getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nconst getContactsError = createAction('contacts/getContactsError');\r\n\r\n\r\nconst addContactsRequest = createAction('contacts/addContactsRequest');\r\nconst addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nconst addContactsError = createAction('contacts/addContactsError');\r\n\r\nconst deleteContactsRequest = createAction('contacts/ deleteContactsRequest');\r\nconst deleteContactsSuccess = createAction('contacts/ deleteContactsSuccess');\r\nconst deleteContactsError = createAction('contacts/ deleteContactsError');\r\n\r\n\r\nconst changeContact = createAction('contacts/changeContact');\r\n\r\nconst actions = {\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n    addContactsRequest,\r\n    addContactsSuccess,\r\n    addContactsError,\r\n    deleteContactsRequest,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n    changeContact,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n    addContactsRequest,\r\n    addContactsSuccess,\r\n    addContactsError,\r\n    deleteContactsRequest,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n} = actions;\r\n\r\naxios.defaults.baseURL = 'https://6198a98e164fa60017c23173.mockapi.io/api/v1';\r\n\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n    dispatch(getContactsRequest());\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(getContactsSuccess(data));\r\n\r\n    } catch (error) {\r\n        dispatch(getContactsError(error));\r\n    }\r\n};\r\n\r\nexport const addContactEl = (item) => async (dispatch) => {\r\n    dispatch(addContactsRequest());\r\n\r\n    await axios\r\n        .post('/contacts', item)\r\n        .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n        .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContactsEl = (id) => (dispatch) => {\r\n    dispatch(deleteContactsRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactsSuccess(id)))\r\n        .catch((error) => dispatch(deleteContactsError(error)));\r\n    \r\n};","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {  getContacts} from \"../../redux/contacts/contacts-selector\";\nimport { addContactEl } from '../../redux/contacts/contacts-operation';\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number, id: contactInputId });\n\n    reset();\n  };\n\n\n  const formSubmitHandler = item => {\n  \n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => { return el.name.toLowerCase() === normalizedName }\n    )\n      ? alert(`${item.name} is already in contacts`)\n      : contacts.find(\n        el => { return el.number.toLowerCase() === item.number },\n      )\n        ? alert(`${item.number} is already in contacts`)\n        : dispatch(addContactEl({name,number}));\n    console.log(item);\n    \n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={contactInputId} className={s.labelForm}>\n        Name\n      </label>\n      <input\n        className={s.formInput}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        id={contactInputId}\n        required\n      />\n      <br />\n      <label htmlFor={contactInputId} className={s.labelForm}>\n        {\" \"}\n        Number\n      </label>\n      <input\n        className={s.formInput}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        id={contactInputId}\n        required\n      />\n      <br />\n      <button className={s.btnAdd} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n\nexport default ContactForm;\n\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilterContacts } from \"../../redux/contacts/contacts-selector\";\nimport { fetchContacts,deleteContactsEl } from \"../../redux/contacts/contacts-operation\";\n\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilterContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n\n  }, [dispatch]);\n\n  return (<>\n    {contacts ?( <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <span className={s.nameForm}>{name}:</span>\n          <span className={s.numberForm}>{number}</span>\n          <button\n            className={s.btnDelete}\n            type=\"button\"\n            onClick={() => {\n             dispatch(deleteContactsEl(id)) \n            }}\n          >\n            <img\n              className={s.svgBtnDelete}\n              src=\"https://img.icons8.com/external-kiranshastry-lineal-color-kiranshastry/64/000000/external-delete-multimedia-kiranshastry-lineal-color-kiranshastry.png\"\n              alt=\"delete button\"\n            />\n          </button>\n        </li>\n      ))}\n    </ul>): null\n}\n    </>\n  );\n};\n\n\nContactList.defaultProps = {\n  name: \"Name Surname\",\n  number: \"123 456 789\",\n};\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactList;\n\n","import s from \"./Container.module.css\";\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { getFilter} from \"../../redux/contacts/contacts-selector\";\nimport actions from \"../../redux/contacts/contacts-actions\";\nimport s from \"./Filter.module.css\";\n\nconst { changeContact } = actions;\nfunction Filter () {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(changeContact(e.target.value));\n  };\n\n\n return (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.formInput}\n      type=\"text\"\n      value={filter}\n      onChange={changeFilter}\n    />\n  </label>)\n};\n\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\n\nexport default Filter;\n","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Container from \"./components/Container\";\nimport Filter from \"./components/Filter\";\n\n\nfunction App() {\n\n  return (\n    <>\n      <Container title={\"Phonebook\"}>\n        <ContactForm />\n      </Container>\n\n      <Container title={\"Contacts\"}>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n    getContactsSuccess,\r\n    addContactsSuccess,\r\n    deleteContactsSuccess,\r\n    changeContact,\r\n} = actions;\r\n\r\nexport const items = createReducer([], {\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactsSuccess]: (state, { payload }) => state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n    \r\n    [changeContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    error,\r\n})","import { configureStore,getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from \"./contacts/contacts-reducer\";\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n  logger,\r\n];\r\n\r\n export const store = configureStore({\r\n   reducer: {\r\n     contacts: rootReducer,\r\n\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store} from './redux/store';\nimport { Provider } from \"react-redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}